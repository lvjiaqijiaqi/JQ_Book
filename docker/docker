
https://www.yuque.com/wukong-zorrm/xwas40/bgizro

docker run -it --rm busybox

docker inspect 查看容器状态
docker inspect nginx 查看nginx信息
docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' mystifying_driscoll 获取容器IP

网络
1.bridge模式, 容器间可以使用IP相互访问, 宿主机可以通过IP访问容器, IP会随着启动变化，不推荐
2.host模式 不推荐
3.none 不推荐

推荐使用自定义网络 通过容器名字相互访问 docker会自建DNS服务器
docker network create my_net 创建
docker network connect my_net mystifying_driscoll 连接
docker network disconnect my_net mystifying_driscoll 断开

存储

bind mount 绑定挂载
将配置文件从主机共享到容器。
在 Docker 主机上的开发环境和容器之间共享源代码或编译目录。
docker run -e MYSQL_ROOT_PASSWORD=123456 \
           -v /home/mysql/mysql.cnf:/etc/mysql/conf.d/mysql.cnf:ro  \ 配置
           -v /home/mysql/data:/var/lib/mysql  \ 数据
           -d mysql:5.7 


volume 卷
● 卷可以在多个正在运行的容器之间共享数据。仅当显式删除卷时，才会删除卷。
● 当你想要将容器数据存储在外部网络存储上或云提供商上，而不是本地时。
● 卷更容易备份或迁移，当您需要备份、还原数据或将数据从一个 Docker 主机迁移到另一个 Docker 主机时，卷是更好的选择。

docker volume create my-data  创建卷
docker run -e MYSQL_ROOT_PASSWORD=123456 \
           -v /home/mysql/conf.d/my.cnf:/etc/mysql/conf.d/my.cnf:ro  \
           -v my-data:/var/lib/mysql  \
           -d mysql:5.7 

tmpfs 临时挂载